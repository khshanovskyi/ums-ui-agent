version: '3.8'

services:
  userservice:
    image: khshanovskyi/mockuserservice:latest
    ports:
      - "8041:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - GENERATE_USERS=true
      - USER_COUNT=1000
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ums-mcp-server:
    depends_on:
      - userservice
    image: khshanovskyi/ums-mcp-server:latest
    ports:
      - "8005:8005"
    environment:
      - USERS_MANAGEMENT_SERVICE_URL=${USERS_MANAGEMENT_SERVICE_URL:-http://host.docker.internal:8041}
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8005/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis-ums:
    image: redis:7.2.4-alpine3.19
    restart: always
    ports:
      - "6379:6379"
    command: >
      redis-server
      --maxmemory 2000mb
      --maxmemory-policy allkeys-lru
      --save 60 1
      --save 300 10
      --save 900 100
      --appendonly yes
      --appendfsync everysec
      --loglevel warning
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-insight:
    image: redislabs/redisinsight:latest
    ports:
      - "6380:5540"

volumes:
  redis-data:
    driver: local